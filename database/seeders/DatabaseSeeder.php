<?php

namespace Database\Seeders;

use App\Models\Post;
use App\Models\User;
use Illuminate\Support\Facades\Hash;

// use Illuminate\Database\Console\Seeds\WithoutModelEvents;
use Illuminate\Database\Seeder;

class DatabaseSeeder extends Seeder
{
    /**
     * Seed the application's database.
     */
    public function run(): void
    {
        $this->call([CategorySeeder::class]);
        // Post::factory(20)
        //     ->recycle([Category::all(), User::all()])
        //     ->create();

        User::create([
            'name' => 'Admin',
            'username' => 'admin',
            'email' => 'aselole@gmail.com',
            'password' => Hash::make('admin123'),
            'is_admin' => true,
            'bio' => 'Admin',
            'email_verified_at' => now(),
            
        ]);

        User::insert([
            'name' => 'user',
            'username' => 'userbaru',
            'email' => 'userbaru@gmail.com',
            'password' => bcrypt('user12345'),
            'is_admin' => false,
            'bio' => 'user baru dibuat',
            'email_verified_at' => now(),]);
    
            Post::create([
                'user_id' => 2,
                'category_id' => 3,
                'title' => 'Weekly Top 5 Tech Updates',
                'slug' => 'weekly-top-5-tech-updates',
                'image' => 'post-images/qDj7ZuRIXUYkSDIneg5hIZBS7jsdRPBo18FwzNzO.webp',
                'content' => '<h1>Meta AI Enhances WhatsApp with Image Editing and Analysis</h1><div><br>Meta AI on WhatsApp: Edit and Analyze Images Meta has rolled out new AI-powered features on WhatsApp, allowing users to edit and analyze images seamlessly. These tools aim to enhance user experience and add more functionality to the popular messaging app. <a href="https://indianexpress.com/article/technology/artificial-intelligence/meta-ai-on-whatsapp-edit-analyse-images-9439429/">Read More</a></div><div><br>Our Take: Meta’s integration of advanced AI tools into WhatsApp showcases their commitment to enhancing digital communication. These features promise to make image editing and analysis more accessible and efficient for users.</div><div><br></div><h1>Celebrating National Video Game Day 2024</h1><div><br>National Video Game Day 2024: History and Significance National Video Game Day 2024 celebrates the evolution and impact of video games. This day honors the history, cultural significance, and the joy that video games bring to players worldwide. <a href="https://indianexpress.com/article/trending/trending-globally/national-video-game-day-2024-date-history-significance-9439430/">Read More</a></div><div><br>Our Take: National Video Game Day highlights the profound influence of video games on entertainment and culture. It’s a perfect opportunity to appreciate the innovation and creativity within the gaming industry.<br><br></div><h1>Gmail App Introduces AI-Powered Email Summarization</h1><div><br>Gmail App Gets Email Summarization Feature The Gmail smartphone app now includes an email summarization option powered by Google’s Gemini AI. This feature helps users quickly understand the gist of lengthy emails, improving productivity and communication efficiency. <a href="https://www.business-standard.com/technology/tech-news/gmail-smartphone-app-gets-email-summarise-option-powered-by-gemini-report-124070800226_1.html">Read More</a></div><div><br>Our Take: Gmail’s new summarization feature is a game-changer for email management. By leveraging AI, it enables users to process information faster, making email interactions more effective and less time-consuming<br><br><br></div><h1>Massive Password Leak Hits the Dark Web</h1><div><br>Nearly 10 Billion Passwords Leaked on Dark Web Close to 10 billion passwords have been reportedly leaked on the dark web, raising serious security concerns. This massive breach underscores the critical need for robust cybersecurity measures. <a href="https://www.moneycontrol.com/technology/close-to-10-billion-passwords-allegedly-leaked-on-dark-web-all-the-details-article-12764228.html">Read More</a></div><div><br>Our Take: The scale of this password leak is alarming and highlights the importance of strong, unique passwords and regular security practices. Users must stay vigilant and proactive in protecting their digital identities.<br><br><br></div><h1>MIT Psychologist Warns Against AI Love</h1><div><br>MIT Psychologist Cautions Against Falling for AI An MIT psychologist warns humans about forming romantic attachments with AI, emphasizing that AI cannot genuinely care or reciprocate feelings. This cautionary note underscores the psychological impacts of human-AI relationships. <a href="https://www.indiatoday.in/technology/news/story/mit-psychologist-warns-humans-against-falling-in-love-with-ai-says-it-just-pretends-and-does-not-care-about-you-2563304-2024-07-06">Read More</a></div><div><br>Our Take: This warning is a crucial reminder of the boundaries between human emotions and artificial intelligence. As AI becomes more sophisticated, understanding its limitations and potential psychological effects is essential</div><div><br></div>'
                    
            ]);
            Post::create([
                'user_id' => 2,
                'category_id' => 3,
                'title' => 'QRIS the Solution for Easy Digital Transactions',
                'slug' => 'qris-the-solution-for-easy-digital-transactions',
                'image' => 'post-images/WCbMy1U40zilnVFzolD5LJK1z6kqddlX8wIG0cR2.webp',
                'content' => '<div>In this digital era, I see big changes in the world of technology, especially in the financial sector. Financial technology, or better known as fintech, presents many innovations that facilitate digital transactions. One of the innovations that I feel the impact of the most is the presence of QRIS (Quick Response Code Indonesian Standard). QRIS has brought a new way of making payments, and made me wonder, what makes QRIS so special in facilitating daily transactions?<br><br><br>Illustration of Using QRIS<br>What is QRIS?<br><br>QRIS (Quick Response Code Indonesian Standard) is a national standard created specifically for non-cash payments in Indonesia using the QR code method. QRIS was developed by Bank Indonesia together with the Indonesian Payment System Association (ASPI) and introduced on August 17, 2019. With this standard, one QR code can be used for various payment platforms, such as e-wallets (OVO, Gopay, ShopeePay, Dana, and others) and mobile banking. This means that users like me no longer need to use different codes for each application. From here, I feel how the presence of QRIS can make payments more efficient and practical at various merchants spread throughout Indonesia.<br><br><br>Growth of QRIS Usage in Indonesia<br><br>The use of QRIS in Indonesia is growing rapidly, even far beyond my expectations. Based on the latest data from Bank Indonesia, transactions using QRIS recorded a growth of 226.54% in the past year. The number of users has also reached more than 50 million people with around 32 million merchants spread across various regions. These numbers to me show the public’s enthusiasm for the convenience and flexibility offered by QRIS, both for domestic and cross-border transactions.<br><br><br>Illustration of merchants that provide QRIS as one of the payment methods<br>Benefits of QRIS<br><br>From personal experience and observation, QRIS offers a variety of very valuable benefits, both for users and businesses:<br><br>Benefits for Users: I realized how QRIS makes the transaction process faster and easier by simply scanning the QR code. Also, I no longer need to carry cash around, which makes me feel safer. The use of QRIS also helps me avoid the risk of fraud, considering all QRIS organizers are under the supervision of Bank Indonesia. Interestingly, with QRIS I feel safer during a pandemic because transactions have minimal physical contact, thus minimizing the risk of disease transmission.<br>Benefits for Businesses: From a business perspective, I see QRIS as an efficient solution. Many small and medium businesses have started utilizing QRIS to accept payments from various e-wallets and mobile banking. This certainly helps increase their sales potential as customers can choose the most convenient payment method. In addition, QRIS allows businesses to save on petty cash management costs and enables them to monitor and analyze transactions more efficiently. The fast merchant registration process is another attraction for small businesses to start using QRIS.<br><br>QRIS Cross Border<br>QRIS and International Payment Expansion<br><br>Along with the widespread use of QRIS, I also see the QRIS Cross Border initiative. This is a collaborative effort that enables cross-border payment standards between Indonesia and several countries in Southeast Asia. The ease of transactions will become more enjoyable when visiting countries such as Singapore, Thailand and Malaysia, where QRIS can be used for transactions. Vice versa, foreign tourists who come to Indonesia can use QRIS to make payments at merchants that already support QRIS Cross Border. This certainly facilitates transactions and provides convenience for business people and tourists.<br><br>Challenges of Using QRIS<br><br>However, I also realize that the implementation of QRIS cannot be separated from challenges. One of the biggest challenges is people’s digital literacy and limited infrastructure in remote areas. As someone who follows this development, I see how Bank Indonesia continues to educate the public about the importance of digitization in the payment system. This is done so that people are more aware and accustomed to using QRIS in their daily lives. In addition, Bank Indonesia is also working with payment service providers to ensure that the QRIS network can reach all corners of the country.<br><br>Conclusion<br><br>Overall, my experience using QRIS has changed my perspective on digital transactions in Indonesia. The convenience, security, and efficiency that QRIS offers makes it one of the fintech innovations that is highly relevant and useful in our daily lives. Although there are still challenges, such as uneven internet infrastructure and digital literacy that needs to be improved, I am optimistic that the future of QRIS in Indonesia will be even brighter. With good regulatory support and growing public acceptance, QRIS has great potential to support financial inclusion across the country, even in remote areas that were previously hard to reach by conventional financial services.<br><br>This article was written as part of the Financial Technology course assignment at the Information Systems and Technology Study Program, Universitas Siber Indonesia, with Rizki Hesananda as the lecturer.</div>'
                
            ]);

            Post::create([
                'user_id' => 2,
                'category_id' => 5,
                'title' => 'Old Age Is Not a Disease',
                'slug' => 'old-age-is-not-a-disease',
                'image' => 'post-images/Qk6tUMelLT02J3qeQjrnkO7yfJ0ysYPk0xVi5EE5.webp',
                'content' => '<div><br>My friend Alex died at 97. We had lost touch about 10 years ago when I moved away from Montreal.</div><div><br>He died of old age, another friend in his late 60s, voiced. His statement troubled me deeply.</div><div><br>A lifetime ago I followed a group of veterinarian students and their professor to a farm to evaluate a horse. The farmer’s teenage grandson walked into the stable and said offhandedly, “Trixie is just old and needs to be acting her age”.</div><div><br>The professor, a tall and somewhat intimidating figure in her early 60s, responded, “Old age is NOT a disease.” Trixie “complied” with the professor’s sentiment and lived another 21 years, full of joy and productivity on the farm, to the ripe old age of 56.</div><div><br>No longer in this world, the professor’s words came to my conscious mind every time when a relevant matter was at hand.</div><div><br>A year and a half ago, my 95-year-old electrician/plumber Martin severely injured his back while lifting some heavy furniture at the volunteer-run Farm Museum next door. Due to severe pain, he couldn’t stand straight or walk without a walker for an extended period of time.</div><div><br>His primary care physician said one day, “If I were your age, I wouldn’t be complaining to just be alive.”</div><div><br>I was thrilled when Martin didn’t “listen” to that statement: He “religiously” did his physio-exercises twice daily, attended a senior exercise class twice a week and could be caught repairing his rental house in town anyday anyone might be dropping by. At this rate, he would be back to work full time perhaps in another half a year, just like he had done in his entire life.</div><div><br>Armed with shining examples of horses and men, I intend to never “act my age”, with the hope that others will join me.</div>'
                
            ]);
            Post::create([
                'user_id' => 2,
                'category_id' => 1,
                'title' => 'A Beginners Handbook to Software Development',
                'slug' => 'a-beginners-handbook-to-software-development',
                'image' => 'post-images/gwOXGoBTplFypGtxxx2cjSZflByBYFpXeB2NELlX.webp',
                'content' => '<div><br>Welcome to the Developers Handbook! During my internship, I initially struggled with navigating official documentation and articles. It took some time to connect the dots, but once I grasped the core concepts, these became reliable sources I could always refer back to. Whether you’re just starting out or looking to refresh your knowledge, this guide of resources covers the key concepts, methodologies, and tools that are fundamental to get started with software engineering.</div><div><strong><br>1. Software Development Life Cycle (SDLC) and Agile Methodology</strong></div><div><strong><br>a. Overview of SDLC</strong></div><div><br>The Software Development Life Cycle (SDLC) is a structured process used by software developers to design, develop, and test software.</div><ul><li><a href="https://www.geeksforgeeks.org/software-development-life-cycle-sdlc/">Introduction to SDLC</a></li><li><a href="https://www.geeksforgeeks.org/software-development/">Detailed Guide on Software Development</a></li></ul><div><strong><br>b. Agile Software Development</strong></div><div><br>Agile is a methodology focused on iterative development, where requirements and solutions evolve through collaboration between organising cross-functional teams.</div><ul><li><a href="https://www.geeksforgeeks.org/software-engineering-agile-software-development/">Introduction to Agile Software Development</a></li><li><a href="https://www.agilealliance.org/wp-content/uploads/2021/02/AgilePracticeGuide.pdf">Agile Practice Guide</a></li><li><a href="https://asana.com/resources/agile-methodology">Understanding Agile Methodology</a></li></ul><div><strong><br>c. Extreme Programming (XP)</strong></div><div><br>Extreme Programming (XP) is an Agile software development framework that aims to improve software quality and responsiveness to changing customer requirements through frequent releases in short development cycles.</div><ul><li><a href="https://www.geeksforgeeks.org/software-engineering-extreme-programming-xp/">Introduction to Extreme Programming</a></li><li><a href="https://www.c-sharpcorner.com/article/12-core-practices-in-xp/">12 Core Practices in XP</a></li></ul><div><strong><br>2. Version Control with Git</strong></div><div><br>Git is a distributed version control system that helps developers track changes in their codebase, collaborate with others, and manage different versions of their projects.</div><ul><li><a href="https://git-scm.com/book/en/v2">Git Documentation</a></li></ul><div><strong><br>3. Semantic Versioning</strong></div><div><br>Semantic Versioning is a versioning scheme for software that uses a three-part version number (major, minor, patch) to indicate backward-incompatible changes, backward-compatible changes, and bug fixes.</div><ul><li><a href="https://semver.org/">Semantic Versioning Guide</a></li></ul><div><strong><br>4. Programming Languages and Object-Oriented Design</strong></div><div><br>To make things clearer, here’s a breakdown of programming languages and related principles:</div><div><strong><br>a. Object-Oriented Design Principles (SOLID)</strong></div><div><br>The SOLID principles are a set of five design principles intended to make software designs more understandable, flexible, and maintainable. They are key to OOP (object-oriented programming) and are widely applied in software engineering.</div><ul><li><a href="https://www.freecodecamp.org/news/solid-principles-single-responsibility-principle-explained/">Understanding SOLID Principles</a></li><li><a href="https://www.geeksforgeeks.org/single-responsibility-in-solid-design-principle/">Single Responsibility Principle</a></li><li><a href="https://www.digitalocean.com/community/conceptual-articles/s-o-l-i-d-the-first-five-principles-of-object-oriented-design">Complete Guide to SOLID Principles</a></li></ul><div><strong><br>b. Backend with Java Spring Boot</strong><br>Backend languages focus on the server-side logic and data processing.</div><div><strong><br>Java</strong><br>Java is widely used for enterprise applications and has a strong emphasis on object-oriented programming.</div><ul><li><a href="https://www.javatpoint.com/java-web-development">Java Basics</a></li></ul><div><strong><br>c. Frontend with React and Typescript</strong></div><div><br>Frontend languages are used to build user interfaces, making applications interactive and visually engaging.</div><div><strong><br>JavaScript Arrays</strong></div><div><br>Arrays are a fundamental part of JavaScript, allowing you to store and manipulate lists of values.</div><ul><li><a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array">JavaScript Arrays Documentation</a></li></ul><div><strong><br>TypeScript</strong></div><div><br>TypeScript is a superset of JavaScript that adds types, interfaces, and other language features that help in writing more robust and maintainable code.</div><ul><li><a href="https://www.typescriptlang.org/docs/handbook/2/objects.html">TypeScript Handbook</a></li></ul><div><strong><br>React: Tic Tac Toe Tutorial</strong></div><div><br>React is a JavaScript library for building user interfaces. This section guides you through a simple Tic Tac Toe game to get started with React.</div><ul><li><a href="https://react.dev/learn/tutorial-tic-tac-toe">React Tic Tac Toe Tutorial</a></li><li><a href="https://react.dev/learn/thinking-in-react#step-1-break-the-ui-into-a-component-hierarchy">Breaking UI into Components</a></li></ul><div><strong><br>5. Object-Relational Mapping (ORM)</strong></div><div><br>ORM is a programming technique that enables you to query and manipulate data from a database using an object-oriented paradigm.</div><ul><li><a href="https://www.javatpoint.com/jpa-tutorial">Java Persistence API (JPA) Tutorial</a></li><li><a href="https://www.geeksforgeeks.org/hibernate-tutorial/">Hibernate ORM Tutorial</a></li></ul><div><strong><br>6. Spring JPA</strong></div><div><br>Spring Data JPA is a part of the Spring Framework that simplifies the data access layer of an application, providing easy-to-use methods for accessing and modifying data.</div><ul><li><a href="https://www.tutorialspoint.com/spring_boot_jpa/spring_boot_jpa_overview.htm">Spring Data JPA Guide</a></li></ul><div><strong><br>7. REST APIs</strong></div><div><br>Representational State Transfer (REST) is an architectural style for designing networked applications. RESTful APIs allow different software applications to communicate with each other over the internet using standard HTTP methods.</div><ul><li><a href="https://aws.amazon.com/what-is/restful-api/">What is a RESTful API?</a></li><li><a href="https://www.smashingmagazine.com/2018/01/understanding-using-rest-api/">Understanding and Using REST APIs</a></li></ul><div><strong><br>8. HTTP Methods</strong></div><div><br>HTTP methods are a set of request methods used in web development to interact with resources on the internet.</div><ul><li><a href="https://developer.mozilla.org/en-US/docs/Web/HTTP/Methods">HTTP Methods Explained</a></li></ul><div><strong><br>9. Unit Testing</strong></div><div><br>Unit testing is a software testing method where individual units or components of a software are tested. It ensures that each unit of the software performs as expected.</div><ul><li><a href="https://www.geeksforgeeks.org/unit-testing-software-testing/">Introduction to Unit Testing</a></li><li><a href="https://brightsec.com/blog/unit-testing/">Best Practices for Unit Testing for Frontend</a></li><li><a href="https://www.baeldung.com/java-unit-testing-best-practices#bestPractices">Best Practices for Unit Testing in Java</a></li></ul><div><strong><br>10. JSON Web Tokens (JWT)</strong></div><div><br>JWT is a compact, URL-safe means of representing claims to be transferred between two parties.</div><ul><li><a href="https://jwt.io/introduction">Introduction to JWT</a></li></ul><div><strong><br>11. CSS and Frameworks</strong></div><div><br>CSS is essential for styling web applications. Consider exploring Bootstrap for rapid UI development.</div><ul><li><a href="https://getbootstrap.com/docs/5.3/getting-started/introduction/">Bootstrap Documentation</a></li><li><a href="https://www.smashingmagazine.com/2020/05/styling-components-react/">Styling React Components</a></li></ul><div><strong><br>12. Data Modeling</strong></div><div><br>Data modeling is the process of creating a data model for the data to be stored in a database. It helps in organising and structuring data to support business processes.</div><ul><li><a href="https://www.ibm.com/topics/data-modeling">Overview of Data Modeling</a></li><li><a href="https://www.scaler.com/topics/dbms/data-models-in-dbms/">Data Models in DBMS</a></li><li><a href="https://www.javatpoint.com/dbms-er-model-concept">ER Model Concepts</a></li></ul>'

            ]);

            Post::create([
                'user_id' => 2,
                'category_id' => 4,
                'title' => '22 Things I Learned by 22',
                'slug' => '22-things-i-learned-by-22',
                'image' => 'post-images/9BucKAabC4lNaRl0EHYHLqyOIcawWzfGAOVE9sXa.webp',
                'content' => '<ol><li>Seek wonder in the Earth, it is your true home. Wake up early to watch the sunrise. Let yourself marvel in the colours of the sunset.</li><li>Do not make yourself more digestible for others, you are not a product that needs to be sold, marketed. You are a human being.</li><li>If you are at crossroads with yourself, write. If you are at peace, read.</li><li>The world will keep moving, whether or not you do.</li><li>Comparing yourself to other people will never be benefit you, everyone has their own track.</li><li>Be yourself, anyone worth talking to will accept your true form.</li><li>Take pride in your accomplishments, you are the only one who’s done them.</li><li>Never stop learning, the world is vast, you cannot know everything. Try to know as much as you can.</li><li>If someone offers you help, take it. You are not bothering them, they wouldnt have asked if they thought you were a burden.</li><li>Practice kindness, a little goes a long way.</li><li>Embrace platonic and familial love, it can be much more fulfilling than romantic love.</li><li>Tell your friends you love them.</li><li>Listen to the birds sing, find comfort in their melodies.</li><li>Do what you like, not what others like.</li><li>You have to let go, things will change. Stop holding on so tight.</li><li>Accept the fact you cannot control everything.</li><li>Set boundaries. If you do not protect yourself, no one will.</li><li>Practice gratitude. Write down one thing you are grateful for at the end of each day. This will help you be more mindful of your life.</li><li>Try you best to be understanding of your parents. They are living their one and only life for the first time. They are not the perfect people you thought they were in your childhood.</li><li>Explore where you live, open your mind to the various flavors of life that exist outside of your own.</li><li>Do not be afraid to sit out in the rain and get drenched, you cannot truly appreciate being dry if you have never let yourself get soaked.</li><li>Come to terms with your flaws, they make you unique. No one is perfect, stop expecting yourself to be.</li></ol><div><br></div>'
                
            ]);
            Post::create([
                'user_id' => 1,
                'category_id' => 5,
                'title' => 'Why is age 70 considered old age?',
                'slug' => 'why-is-age-70-considered-old-age',
                'image' => 'post-images/EY1Ls8tfqW5ujhiXyEjLOkHiwQJrtDfzIH90XNKi.webp',
                'content' => '<div><br>The perception of age 70 as old age has evolved due to a mix of historical, social, biological, and cultural factors.</div><div><br>Here’s a breakdown of why 70 is often seen as a benchmark for old age:</div><h1><strong>Historical Life Expectancy</strong></h1><div><br>In the past, the average life expectancy was much lower than it is today.</div><div><br>For example, in the early 20th century, life expectancy in many parts of the world was around 50–60 years.</div><div><br>Reaching the age of 70 was considered exceptional, marking a person as elderly or advanced in years.</div><div><br>Even as modern medical advancements have extended life expectancy significantly, the association of 70 with old age has persisted as a cultural norm.</div><h1>Retirement and Social Policies</h1><div><br>In many countries, retirement age policies are set around 65 or 67, aligning with the time people typically become eligible for social security or pension benefits.</div><div><br>By the time someone reaches 70, they are usually well into retirement, reinforcing the notion that they are in the “old age” phase of life.</div><div><br>This policy framework helps solidify the perception that 70 marks a transition into senior status.</div><h1>Physical and Biological Changes</h1><div><br>As people age, natural biological processes contribute to a decline in certain physical and cognitive functions.</div><div><br>By age 70, these changes are often more pronounced.</div><div><br>For example, people may experience reduced bone density, muscle mass, slower reflexes, and potentially more chronic health conditions.</div><div><br>These changes reinforce the idea that age 70 is associated with old age.</div><h1>Cultural and Societal Views</h1><div><br>Cultural attitudes play a significant role in how age is perceived.</div><div><br>In some cultures, older age is respected and revered as a time of wisdom and experience, while in others, it may be seen as a decline.</div><div><br>The societal view that age 70 is “old” comes from longstanding beliefs that by this time, people are in the later stages of their lives.</div><div><br><strong>What Are the First Signs of Old Age? - Free Calculator Site</strong><br>Aging is a natural process that everyone experiences as they progress through life.<br>freecalculatorsite.com</div><h1>Milestones and Longevity Trends</h1><div><br>With increasing life expectancy, age 70 might no longer seem as “old” as it once did.</div><div><br>However, it is still a milestone that signifies a shift into a phase where people often focus on legacy, health maintenance, and reflection.</div><div><br>For many, 70 is a time to embrace a slower-paced lifestyle, which aligns with traditional perceptions of old age.</div><h1>Personal and Social Identity</h1><div><br>Many people view turning 70 as a significant milestone that symbolizes entry into their senior years.</div><div><br>This can include adjustments in roles and self-perception, such as becoming a grandparent, adopting new hobbies, or participating in activities geared toward seniors.</div><div><br>While age 70 is often considered old age, it’s important to remember that modern medicine and an emphasis on healthy lifestyles have greatly altered what it means to be 70.</div><div><br>Today, many individuals in their 70s remain active, engaged, and lead fulfilling lives.</div><div><br>The concept of “old age” is becoming more fluid and personalized, with people living longer and healthier lives than ever before.</div>'
            ]);
            Post::create([
                'user_id' => 1,
                'category_id' => 4,
                'title' => 'What If This Was Your Daughter?',
                'slug' => 'what-if-this-was-your-daughter-socie',
                'image' => 'post-images/E85vniMs3RjBAxyQNfuLJFGAdLVnGPSf2astQFo8.webp',
                'content' => '<div><strong><br>What if this was your daughter?</strong></div><div><br>It’s a familiar outcry among feminists, a desperate attempt to stir a man’s empathy for women, particularly in a moment when he is demonstrating none. When, for example, he suggests that women who aren’t promiscuous won’t be affected by abortion bans. Or that it sounds reasonable to him that a man should be able to expect sex after buying a woman dinner. Or that it can’t be rape if she was wearing a push-up bra.</div><div><em><br>But what if it was your daughter?</em> we ask. Surely, he wouldn’t support the denial of medial care for his own offspring as punishment for her alleged sluttiness. Surely, he wouldn’t argue that his daughter should get on her knees just because a man bought her a drink. Surely, he wouldn’t justify rape just because his daughter wore a push-up bra to the dance.</div><div><br>And sometimes, this actually works. Sometimes, a man with little to no empathy for women will magically develop some when he has a daughter. In fact, it is common enough that there’s a name for this: the daughter effect.</div><div><br><br></div>'
            ]);
            Post::create([
                'user_id' => 1,
                'category_id' => 2,
                'title' => 'Ukraine’s drone production capacity is bad news for the Kremlin.',
                'slug' => 'ukraines-drone-production-capacity-is-bad-news-for-the-kremlin',
                'image' => 'post-images/DZZgx0ga25rBQrmF4Pav38IIpwuYP3mIRxCqLtsc.webp',
                'content' => '<div><br>Speaking at the Defense Industries Forum in Kyiv on September 29th, President Zelensky made a series of announcements. He discussed increasing production of “Bohdana” howitzers to 15 per month, Ukraine’s steadily growing missile program, and building facilities to repair Western infantry fighting vehicles.</div><div><br>It was all very interesting, as a strong Ukraine serves as a protective shield for the entire eastern front, from Finland all the way down to Turkey. But my eyes quickly zeroed in on one particular stat.</div><blockquote><br>The total number of drones we are now capable of producing annually in Ukraine is 4 million, with more than 1.5 million already contracted — President Zelensky</blockquote><div><br>After watching Putin speak at international forums and in the media for several years, you develop an innate sense of distrust for anything that comes out of a politician’s mouth, prompting the need for corroborative evidence before accepting any explanation.</div><div><br>Ukraine remains extremely dependent on Western leaders for support. For Zelensky to give exaggerated information would be detrimental to the trust he is trying so hard to build. They still don’t have the fighter jets they need, and clearance for long-range weapons is yet to come. They will continue to rely heavily on the West for data, satellite imagery, and similar resources to identify targets.</div><div><strong><br>Therefore, coming out with exaggerated claims, like the Kremlin often does, is not in Ukraine’s best interest.</strong></div><div><br>Ukraine is either at, or very close to, hitting the number President Zelensky mentioned. They are manufacturing 4 million drones. However, what we do not know is the distribution of those drones by range. How many are first-person view (FPV) drones that can travel a few kilometers or up to a few tens of kilometers? How many are mid-range drones? How many are long-range drones? Each type is crucial, as it makes a significant difference to their combat power.</div><div><br>We will most likely never have access to that data, and for good reasons. Still, going from zero drones in 2022 to 4 million in just three years — during the middle of a war — is a breathtaking achievement. An achievement that is already delivering significant results on the battlefield.</div><div><br>After analyzing Ukraine’s targeted hits on four large Russian ammunition depots, the open-source community has concluded that long-range Ukrainian drones caused the damage, partly aided by the Russian practice of storing ammunition under open skies. More than 30,000 tons of Russian ammo has been destroyed.</div><div><br>A significant portion of this destroyed arsenal was imported from North Korea and Iran. Even if Ukraine used 300 long-range drones, the cost-benefit ratio is overwhelmingly in Ukraine’s favor. A few million dollars’ worth of drones have destroyed billions of dollars’ worth of Russian ammunition.</div><div><br>“There is no clearer example than the development and employment of uncrewed systems, where low-cost solutions are increasingly defeating more advanced capabilities and delivering disproportionate impact on the battlefield,” said James Cartlidge, Minister for Defence Procurement in the United Kingdom.</div><div><br>As a country struggling for money and weapons, Ukraine must seize any opportunity to turn the tables on Russia and build cost-effective solutions to the challenges of war. I believe they have done just that.</div><div><br>However, 4 million drones sounds like a lot, doesn’t it? Actually, it’s not. It averages out to just over 10,000 drones per day. Late last year, Ukrainian officials announced they were targeting the production of 1 million drones over the following year. If that was their initial projection, how could they have managed to hit a fourfold increase?</div><div><br>On February 14th, 2024, Latvia and the United Kingdom announced the creation of a drone coalition. Off the bat, the U.K. committed £200 million to manufacturing drones. Over time, 14 nations joined the coalition, collectively bringing the investment to $600 million to support Ukraine’s manufacturing capacity.</div><div><br>“The caveat in this goal is to specify that while, yes, quantity is important, so is providing quality systems — so with this number we aren’t only talking about providing one type of drone but the full spectrum of them, including electronic warfare and counter capabilities,” Latvian Defense Minister Andris Spruds said at the time.</div><div><br>The drone coalition announced that their goal is to deliver 1 million drones to Ukraine. I believe part of these 1 million drones were manufactured in Ukraine, while the rest were produced by donor nations. In addition to the assistance from Western allies, Ukraine has also supported its own drone production programs through crowdfunding, sometimes referring to these efforts as “dronations.”</div><div><br>Ukraine was building its capacity independently, and then Latvia and the U.K. stepped in to provide a significant boost. Soon after, more nations joined the effort. So, if we consider Ukraine’s claim that it was on its way to producing 1 million drones in the second half of last year, and the drone coalition’s promise of another million, Ukraine had a clear path to 2 million drones.</div><div><br>That’s the power of scale, isn’t it? Once you hit economies of scale, production can be ramped up. I believe Ukraine could have easily positioned itself to build 2 to 4 million drones per year. This increase in capacity would serve as a huge deterrent to Russian forces.</div><div><br>This is where the American decision at the end of September to open up the weapons pipeline becomes crucial. Ukraine has the drones, but where they will need further support from Western partners is in electronic warfare. This will help Ukraine counter Russian drones effectively.</div><blockquote><em><br>An emerging challenge of counter-drone defense is the need to develop and employ a system that is cheaper than its target. Crucially, smaller drones that can swarm toward a target are more difficult to shoot down. as they can overwhelm air defense systems. A key countermeasure has been to utilize electronic warfare in the form of jammers, spoofers, and high-energy lasers that prevent drones from reaching their target. Jammers — used by both Russia and Ukraine — send out powerful electromagnetic signals that can cause a target drone to fall to the ground, veer off course, or turn around and attack its operator.</em></blockquote><div><br>The Russians have a wide range of Electronic Warfare (EW) systems deployed across their brigades. Before the war, they had dedicated EW brigades, although I’m not sure if they still maintain that structure. Regardless, Russia does have significant EW capabilities, and this is something Ukraine cannot build on its own. They will need Western support, and the United States can assist in developing dedicated EW brigades for Ukraine.</div><div><br>Expanding Ukraine’s EW capabilities would be a critical asset on the battlefield. Once Ukraine acquires more EW systems — they do have some already — they can deploy them before advancing into a section, disabling Russian drones. After neutralizing the drones, Ukraine can deploy its own drones to target enemy positions. Then artillery can be brought in, followed by ground forces moving in. It’s a step-by-step process, but any counterattack must start with electronic warfare.</div>'
            ]);

            Post::create([
                'user_id' => 1,
                'category_id' => 1,
                'title' => 'Stop Overusing Console.log! Here’s Why 🚫 (And Better Alternatives)',
                'slug' => 'stop-overusing-consolelog-heres-why-and-better-alternatives',
                'image' => 'post-images/Qft2GQ5k6WUxmNv8ejnk1JpEOjdrN9sINKzj8GHQ.webp',
                'content' => "<div><br>As developers, it’s tempting to overuse console.log() to quickly debug code. While it might seem like the fastest way to diagnose issues, it can slow you down in the long run, clutter your code, and limit your insights. The good news is that JavaScript’s console object offers many more powerful methods beyond console.log()—and they can significantly enhance your debugging process.</div><div><br>Let’s dive into why you should move beyond console.log() and explore some smarter alternatives, including advanced console methods!</div><h1>🚫 Why Overusing console.log() Can Hold You Back</h1><div><br>Yes, console.log() works, but here are a few reasons why over-relying on it can harm your workflow:</div><ol><li><strong>Clutters the Console</strong>: Scattered logs fill up the console, making it hard to isolate the information you really need.</li><li><strong>No Structured Insights</strong>: console.log() only outputs raw values, offering no structure or deeper view of complex data like objects or arrays.</li><li><strong>Performance Overhead</strong>: Frequent logging in performance-sensitive environments (like loops or asynchronous functions) can degrade performance over time.</li><li><strong>Missed Potential</strong>: JavaScript offers many other built-in console methods that can give you much richer insights and cleaner results.</li></ol><h1>✅ Smarter Debugging Alternatives with console</h1><div><strong><br>1. </strong>console.dir()<strong> for Inspecting Objects</strong></div><div><br>Instead of using console.log() to print out objects, which can be hard to read, try console.dir(). It displays an interactive list of the properties of a specified object, making it easier to explore deeply nested structures.</div><pre>const user = { name: 'Alice', age: 25, preferences: { theme: 'dark', notifications: true } };
console.dir(user, { depth: null });</pre><ul><li><strong>Benefit</strong>: This method lets you control how deep you want to go into the object properties, providing a more structured view compared to console.log().</li></ul><div><strong><br>2. </strong>console.clear()<strong> to Keep the Console Clean</strong></div><div><br>If you’re logging frequently during development, your console can get cluttered quickly. Instead of manually clearing it or sifting through endless logs, use console.clear() to clear the console when you no longer need old logs.</div><pre>console.clear();</pre><ul><li><strong>Benefit</strong>: It helps you focus on the latest logs and data, making your debugging process more efficient.</li></ul><div><strong><br>3. </strong>console.group()<strong> and </strong>console.groupEnd()<strong> for Organizing Logs</strong></div><div><br>Sometimes you need to organize related logs into groups for better readability. console.group() allows you to group multiple logs together, and you can even nest groups for hierarchical data. Use console.groupEnd() to close the group.</div><pre>console.group('User Info');
console.log('Name: Alice');
console.log('Age: 25');
console.group('Preferences');
console.log('Theme: Dark');
console.log('Notifications: Enabled');
console.groupEnd(); // Closes 'Preferences'
console.groupEnd(); // Closes 'User Info'</pre><ul><li><strong>Benefit</strong>: Grouping logs makes it easier to manage multiple log entries, especially when working with related sets of information.</li></ul><div><strong><br>4. </strong>console.table()<strong> for Displaying Tabular Data</strong></div><div><br>If you’re dealing with arrays of objects or large datasets, console.table() can format your output into a nice, readable table, making it easier to visualize complex data.</div><pre>const users = [
  { name: 'Alice', age: 25 },
  { name: 'Bob', age: 30 },
  { name: 'Charlie', age: 35 }
];
console.table(users);</pre><ul><li><strong>Benefit</strong>: This method offers a clean, visual display of arrays and objects, making it easier to digest structured data at a glance.</li></ul><div><strong><br>5. </strong>console.time()<strong> and </strong>console.timeEnd()<strong> for Measuring Performance</strong></div><div><br>Need to know how long a function takes to run? Use console.time() at the start of the function and console.timeEnd() at the end to measure the execution time of a block of code. This is especially useful for performance optimization.</div><pre>console.time('fetchData');
// Simulate some async operation
setTimeout(() =&gt; {
  console.timeEnd('fetchData');
}, 2000);</pre><ul><li><strong>Benefit</strong>: Helps in tracking the performance of specific blocks of code, so you can spot bottlenecks and optimize performance-critical parts of your app.</li></ul><h1>🏆 Best Practices for Console Debugging</h1><div><br>Here are a few tips to keep in mind while using console methods:</div><ul><li><strong>Remove Logs in Production</strong>: Always ensure that logs are removed in production code to avoid exposing sensitive data or slowing down the app. Tools like Winston and Bunyan can help manage logs effectively.</li><li><strong>Use Log Levels</strong>: Group logs by severity (info, warn, error) to avoid noisy logging and make it easier to filter necessary information.</li><li><strong>Breakpoints Over Logs</strong>: Use breakpoints in IDEs like VSCode or Chrome DevTools for a more controlled debugging process. It’s often faster and provides more context than adding logs manually.</li></ul><h1>Final Thoughts</h1><div><br>While console.log() has its place, overusing it can lead to inefficient debugging and messy code. By embracing more advanced console methods like console.dir(), console.table(), and console.group(), you can improve the way you debug complex data, manage logs, and measure performance.</div><div><br>Next time you reach for console.log(), consider using one of these methods instead for a cleaner, more insightful debugging experience.</div>"
            ]);

    }
}
